# This workflow tests Sqitch's PostgreSQL engine on all supported versions of
# Postgres. It runs for pushes and pull requests on the `main`, `develop`,
# `**postgres**`, `**yugabyte**`, and `**engine**` branches.
name: üêò Postgres
on:
  push:
    branches: [main, develop, "**engine**", "**postgres**", "**yugabyte**" ]
  pull_request:
    branches: [main, develop, "**engine**", "**postgres**", "**yugabyte**" ]
jobs:
  Postgres:
    strategy:
      matrix:
        pg: [17, 16, 15, 14, 13, 12, 11, 10, 9.6, 9.5, 9.4, 9.3, 9.2, 9.1, '9.0', 8.4]
    name: üêò Postgres ${{ matrix.pg }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Perl
        id: perl
        uses: shogo82148/actions-setup-perl@v1
        with: { perl-version: latest }
      - name: Cache CPAN Modules
        uses: actions/cache@v4
        with:
          path: local
          key: perl-${{ steps.perl.outputs.perl-hash }}
      - run: cpm install --verbose --show-build-log-on-failure --no-test --with-recommends --cpanfile dist/cpanfile
        # DBD::Pg always build against the Debian packaged client, alas, so go
        # ahead and let it be cached. If can figure out how to install the
        # version-specific client (https://github.com/bucardo/dbdpg/issues/84),
        # use cpm install --global to install DBD::Pg for a version-specific
        # build each time.
      - run: cpm install --verbose --show-build-log-on-failure --no-test --with-recommends DBD::Pg
      - name: Install Postgres
        env: { PERL5LIB: "${{ github.workspace }}/local/lib/perl5" }
        run: .github/ubuntu/pg.sh ${{ matrix.pg }}
      - name: prove
        env:
          PERL5LIB: "${{ github.workspace }}/local/lib/perl5"
          LIVE_PG_REQUIRED: true
          SQITCH_TEST_PG_URI: db:pg://postgres@/postgres
        run: prove -lvr t/pg.t
